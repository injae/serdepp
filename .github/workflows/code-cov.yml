name: CodeCov

on: [pull_request]

jobs:
  ubuntu-llvm-code-cov:
    runs-on: ubuntu-latest
    env:
      CMAKE_FLAGS: "-DSERDEPP_USE_NLOHMANN_JSON=ON -DSERDEPP_USE_TOML11=ON -DSERDEPP_USE_YAML-CPP=ON -DSERDEPP_USE_RAPIDJSON=ON -DSERDEPP_USE_FMT=ON -DSERDEPP_BUILD_TESTING=ON -DSERDEPP_USE_CATCH2=ON"
    strategy:
      matrix:
        build-type: ["Debug"]
        llvm-version: ["9"]
    steps:
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
      - name: Basic Setting
        run: |
          sudo apt-get update
          sudo apt-get install -yq build-essential cmake
      - name: Install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x ./llvm.sh
          sudo ./llvm.sh ${{matrix.llvm-version}}
      - name: Compiler Setting
        run: |
          echo "CC=clang-${{matrix.llvm-version}}" >> $GITHUB_ENV
          echo "CXX=clang++-${{matrix.llvm-version}}" >> $GITHUB_ENV
      - name: Clone Repository
        uses: actions/checkout@master
        with:
          submodules: true
      - name: CMake build
        run: |
          cmake -Bbuild -DCMAKE_BUILD_TYPE=${{matrix.build-type}} ${{env.CMAKE_FLAGS}} .
          cd build
          cmake --build . --config ${{matrix.build-type}}
      - name: Generate Coverage Report
        run: |
          cd build/${{matrix.build-type}}
          ./unittest
          llvm-profdata-${{matrix.llvm-version}} merge -sparse default.profraw -o default.profdata
          llvm-cov-${{matrix.llvm-version}} export ./unittest --instr-profile default.profdata -format=lcov >> lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          directory: ./build/${{matrix.build-type}}
          files: lcov.info
          flags: unittest
          fail_ci_if_error: true
          verbose: true
