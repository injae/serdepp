
macro(cppm_compiler_option)
    cmake_parse_arguments(ARG "DEFAULT;NO_DEFAULT" "" "DEBUG;RELEASE" ${ARGN})
    if(${NO_DEFAULT})
        _cppm_compiler_debug_option(NO_DEFAULT)
        _cppm_compiler_release_option(NO_DEFAULT)
    else()
        _cppm_compiler_debug_option(${ARG_DEBUG})
        _cppm_compiler_release_option(${ARG_RELEASE})
    endif()
endmacro()

macro(_cppm_compiler_debug_option)
    cmake_parse_arguments(ARG "NO_DEFAULT" "CLANG;GCC;MSVC" "" ${ARGN})
    if(${ARG_NO_DEFAULT})
        set(DEF_CLANG "")
        set(DEF_GCC   "")
        set(DEF_MSVC  "")
    else()
        set(DEF_CLANG "-Wall -fPIC -O0")
        set(DEF_GCC   "-Wall -fPIC -O0")
        set(DEF_MSVC  "/MP")
    endif()

    if(cppm_build_type STREQUAL "debug")
        if(cppm_compiler_type STREQUAL "clang")
            add_compiler_option(CMAKE_CXX_FLAGS_DEBUG "${DEF_CLANG} ${ARG_CLANG}")
        elseif(cppm_compiler_type STREQUAL "gnu")
            add_compiler_option(CMAKE_CXX_FLAGS_DEBUG "${DEF_GCC} ${ARG_GCC}")
        elseif (cppm_compiler_type STREQUAL "msvc")
            add_compiler_option(CMAKE_CXX_FLAGS_DEBUG "${DEF_MSVC} ${ARG_MSVC}")
        endif()
        cppm_print("Compiler Option: [${cppm_compiler_type}] ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG}")
    endif()
endmacro()

macro(_cppm_compiler_release_option)
    cmake_parse_arguments(ARG "NO_DEFAULT" "CLANG;GCC;MSVC" "" ${ARGN})
    if(${ARG_NO_DEFAULT})
        set(DEF_CLANG "")
        set(DEF_GCC   "")
        set(DEF_MSVC  "")
    else()
        set(DEF_CLANG "-fPIC")
        set(DEF_GCC   "-fPIC")
        set(DEF_MSVC  "/MP /O2")
    endif()

    if(cppm_build_type STREQUAL "release")
        if(cppm_compiler_type STREQUAL "clang")
            add_compiler_option(CMAKE_CXX_FLAGS_RELEASE "${DEF_CLANG} ${ARG_CLANG}")
        elseif(cppm_compiler_type STREQUAL "gnu")
            add_compiler_option(CMAKE_CXX_FLAGS_RELEASE "${DEF_GCC} ${ARG_GCC}")
        elseif (cppm_compiler_type STREQUAL "msvc")
            add_compiler_option(CMAKE_CXX_FLAGS_RELEASE "${DEF_MSVC} ${ARG_MSVC}")
        endif()
        cppm_print("Compiler Option: [${cppm_compiler_type}] ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE}")
    endif()
endmacro()
